/*static const uint8_t D0   = 16;
static const uint8_t D1   = 5;
static const uint8_t D2   = 4;
static const uint8_t D3   = 0;
static const uint8_t D4   = 2;
static const uint8_t D5   = 14;
static const uint8_t D6   = 12;
static const uint8_t D7   = 13;
static const uint8_t D8   = 15;
static const uint8_t D9   = 3;
static const uint8_t D10  = 1;

static const uint8_t TRUE   = 1;
static const uint8_t FALSE  = 0;
*/

//----------------------bibliotecas utilizadas-----------------//
#include <DHT.h>                            
#include <ESP8266WiFi.h>
//-------------------------------------------------------------//
 
String apiKey = "5FV15IFBXWICDZ6J";         //  Entre com o API key do ThingSpeak
 
const char *ssid =  "Luciana Oi Fibra 2G";     // digite aqui o nome da rede sem fio
const char *pass =  "30506030";             // digite aqui a senha de rede
const char* server = "api.thingspeak.com";
 
#define DHTPIN 5                            //número da GPIO que conectada para a comunicação com o DHT22
#define ledGreen 13
#define ledRed 15

DHT dht(DHTPIN, DHT11);                     //fornece qual o tipo e porta para o funcionamento do DHT22
 
WiFiClient client;
 
void setup() 
{
       pinMode(ledGreen, OUTPUT);
       pinMode(ledRed, OUTPUT);
       digitalWrite(ledGreen, LOW);
       digitalWrite(ledRed, LOW);
       
       Serial.begin(115200);
       delay(10);
       dht.begin();
 
       Serial.println("Conectando a ");
       Serial.println(ssid);
 
 
       WiFi.begin(ssid, pass);
 
      while (WiFi.status() != WL_CONNECTED) 
     {
            delay(500);
            Serial.print(".");
     }
      Serial.println("");
      Serial.println("Conectado à rede WiFi");
 
}
 
void loop() 
{
  
      float umidade = dht.readHumidity();
      float temperatura = dht.readTemperature();

    if (temperatura > 26.0){
      digitalWrite(ledRed, HIGH);
      digitalWrite(ledGreen, LOW);
  }
    else{
      digitalWrite(ledGreen, HIGH);
      digitalWrite(ledRed, LOW);
  }
      
              if (isnan(umidade) || isnan(temperatura)) 
                 {
                     Serial.println("Falha na leitura do sensor DHT");
                      return;
                 }
 
                         if (client.connect(server,80))   //   "184.106.153.149" ou api.thingspeak.com
                      {  
                            
                             String postStr = apiKey;
                             postStr +="&field1=";
                             postStr += String(temperatura);
                             postStr +="&field2=";
                             postStr += String(umidade);
                             postStr += "\r\n\r\n";
 
                             client.print("POST /update HTTP/1.1\n");
                             client.print("Host: api.thingspeak.com\n");
                             client.print("Connection: close\n");
                             client.print("X-THINGSPEAKAPIKEY: "+apiKey+"\n");
                             client.print("Content-Type: application/x-www-form-urlencoded\n");
                             client.print("Content-Length: ");
                             client.print(postStr.length());
                             client.print("\n\n");
                             client.print(postStr);
 
                             Serial.print("Temperatura: ");
                             Serial.print(temperatura);
                             Serial.print(" Graus Celcius, Umidade: ");
                             Serial.print(umidade);
                             Serial.println("%. Enviando para o Thingspeak.");
                        }
          client.stop();
 
          Serial.println("Aguardando...");
  
  // thingspeak needs minimum 15 sec delay between updates
  delay(1000);
}
